<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>TreeView Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:Gemstone.Web.Razor.Trees.TreeView" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Gemstone.Web.Razor.Trees" /><meta name="guid" content="Methods_T_Gemstone_Web_Razor_Trees_TreeView" /><meta name="tocFile" content="../toc/IDDI.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://gemstone.github.io/web/"><img alt="GPA Gemstone Library" src="../icons/gemstone-square-48.png" /></a></div><div id="DocumentationTitle" class="level-item">Gemstone Web Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="js">JavaScript</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Tree<wbr />View Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDADASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Gemstone_Web_Razor_Trees_TreeView_BuildRenderTree.htm">BuildRenderTree</a></td><td><br />(Overrides <span class="noLink">ComponentBase<span id="LST2C852C78_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>BuildRenderTree(RenderTreeBuilder)</span>)</td></tr><tr><td><span class="noLink">DispatchExceptionAsync</span></td><td>
             Treats the supplied <span class="parameter">exception</span> as being thrown by this component. This will cause the
             enclosing ErrorBoundary to transition into a failed state. If there is no enclosing ErrorBoundary,
             it will be regarded as an exception from the enclosing renderer.
            
             This is useful if an exception occurs outside the component lifecycle methods, but you wish to treat it
             the same as an exception from a component lifecycle method.
             <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">Equals</span></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">Finalize</span></td><td>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetHashCode</span></td><td>Serves as the default hash function. <br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">GetType</span></td><td>Gets the <span class="noLink">Type</span> of the current instance.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">InvokeAsync(Action)</span></td><td>
            Executes the supplied work item on the associated renderer's
            synchronization context.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">InvokeAsync(Func<span id="LST2C852C78_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Task<span id="LST2C852C78_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</span></td><td>
            Executes the supplied work item on the associated renderer's
            synchronization context.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">MemberwiseClone</span></td><td>Creates a shallow copy of the current <span class="noLink">Object</span>.<br />(Inherited from <span class="noLink">Object</span>)</td></tr><tr><td><span class="noLink">OnAfterRender</span></td><td>
             Method invoked after each time the component has rendered interactively and the UI has finished
             updating (for example, after elements have been added to the browser DOM). Any <span class="noLink">ElementReference</span>
             fields will be populated by the time this runs.
            
             This method is not invoked during prerendering or server-side rendering, because those processes
             are not attached to any live browser DOM and are already complete before the DOM is updated.
             <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">OnAfterRenderAsync</span></td><td>
             Method invoked after each time the component has been rendered interactively and the UI has finished
             updating (for example, after elements have been added to the browser DOM). Any <span class="noLink">ElementReference</span>
             fields will be populated by the time this runs.
            
             This method is not invoked during prerendering or server-side rendering, because those processes
             are not attached to any live browser DOM and are already complete before the DOM is updated.
            
             Note that the component does not automatically re-render after the completion of any returned <span class="noLink">Task</span>,
             because that would cause an infinite render loop.
             <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">OnInitialized</span></td><td>
            Method invoked when the component is ready to start, having received its
            initial parameters from its parent in the render tree.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">OnInitializedAsync</span></td><td>
             Method invoked when the component is ready to start, having received its
             initial parameters from its parent in the render tree.
            
             Override this method if you will perform an asynchronous operation and
             want the component to refresh when that operation is completed.
             <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">OnParametersSet</span></td><td>
            Method invoked when the component has received parameters from its parent in
            the render tree, and the incoming values have been assigned to properties.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">OnParametersSetAsync</span></td><td>
            Method invoked when the component has received parameters from its parent in
            the render tree, and the incoming values have been assigned to properties.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">SetParametersAsync</span></td><td>
            Sets parameters supplied by the component's parent in the render tree.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><a href="M_Gemstone_Web_Razor_Trees_TreeView_SetSelectedNodeAsync.htm">SetSelectedNodeAsync</a></td><td> </td></tr><tr><td><span class="noLink">ShouldRender</span></td><td>
            Returns a flag to indicate whether the component should render.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">StateHasChanged</span></td><td>
            Notifies the component that its state has changed. When applicable, this will
            cause the component to be re-rendered.
            <br />(Inherited from <span class="noLink">ComponentBase</span>)</td></tr><tr><td><span class="noLink">ToString</span></td><td>Returns a string that represents the current object.<br />(Inherited from <span class="noLink">Object</span>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_Gemstone_Web_Razor_Trees_TreeView.htm">TreeView Class</a></div><div><a href="N_Gemstone_Web_Razor_Trees.htm">Gemstone.Web.Razor.Trees Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><span class="site-footer-credits">
<a href="https://gemstone.github.io/web/" target="_self">Documentation Home</a>  •  <a href="https://www.nuget.org/packages/Gemstone.Web/" target="_blank">Gemstone Web Library on NuGet</a><br /><br />
Generated by <a href="https://github.com/EWSoftware/SHFB" target="_blank">Sandcastle Help File Builder</a>
</span><p><a href="https://github.com/gemstone/web/blob/master/LICENSE" target="_blank" rel="noopener noreferrer">Copyright © 2020 Grid Protection Alliance</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40gridprotectionalliance.org?Subject=Gemstone%20Web%20Library">GPA Support</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>